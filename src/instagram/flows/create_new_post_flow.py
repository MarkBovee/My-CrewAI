"""
Create New Post Flow using CrewAI Flow Architecture
Generates social media posts using multi-agent collaboration
"""
import os
from datetime import datetime
from pydantic import BaseModel
from crewai.flow.flow import Flow, listen, start
from crewai import Crew

from src.instagram.instagram_crew import InstagramCrew


class PostState(BaseModel):
    """State model for social media post generation flow"""
    topic: str = ""
    research_results: str = ""
    draft_post: str = ""
    final_post: str = ""
    output_file: str = ""


class CreateNewPostFlow(Flow[PostState]):
    """
    CrewAI Flow for generating social media posts using multi-agent collaboration
    """

    def __init__(self):
        super().__init__()
        self.crew_instance = InstagramCrew()

    @start()
    def initialize_topic(self):
        """Initialize the flow with a topic for social media post generation"""
        print("🚀 Starting Create New Post Flow")
        print(f"📋 Topic: {self.state.topic}")
        print("=" * 60)
        
        # Return the topic to trigger the next step
        return {"topic": self.state.topic}

    @listen(initialize_topic)
    def generate_content(self, topic_data):
        """Generate social media content using the CrewAI crew"""
        print(f"📝 Generating social media content for: {topic_data['topic']}")
        
        # Get the crew and execute it
        crew = self.crew_instance.crew()
        
        # Execute the crew with the topic and current year
        current_year = datetime.now().year
        result = crew.kickoff(inputs={
            "topic": topic_data["topic"],
            "current_year": current_year
        })
        
        # Store the result in state
        self.state.final_post = result.raw if hasattr(result, 'raw') else str(result)
        
        print("✅ Content generation completed!")
        
        return {"content": self.state.final_post}

    @listen(generate_content)
    def save_to_file(self, content_data):
        """Save the generated social media post to a file"""
        print("💾 Saving social media post to file...")
        
        # Create output directory if it doesn't exist
        output_dir = "output/posts"
        os.makedirs(output_dir, exist_ok=True)
        
        # Generate filename with timestamp
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        topic_safe = self.state.topic.replace(" ", "_").replace("/", "_")
        filename = f"social_post_{topic_safe}_{timestamp}.txt"
        filepath = os.path.join(output_dir, filename)
        
        # Create content with metadata
        full_content = f"""# Social Media Post - {self.state.topic}

        Generated: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
        Topic: {self.state.topic}

        ---

        {content_data['content']}

        ---
        Generated by CrewAI Create New Post Flow
        """
        
        # Write to file
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(full_content)
        
        # Store file path in state
        self.state.output_file = os.path.abspath(filepath)
        
        print(f"✅ Social media post saved to: {self.state.output_file}")
        
        return {"file_path": self.state.output_file}

    @listen(save_to_file)
    def flow_complete(self, file_data):
        """Final step to display completion status"""
        print("\n" + "=" * 60)
        print("🎉 CREATE NEW POST FLOW COMPLETED SUCCESSFULLY!")
        print("=" * 60)
        print(f"📁 Saved to: {file_data['file_path']}")
        print(f"📝 Topic: {self.state.topic}")
        
        print("\n📱 CONTENT PREVIEW:")
        print("-" * 40)
        print(self.state.final_post)
        print("-" * 40)
        
        print(f"\n🎯 FLOW COMPLETED SUCCESSFULLY!")
        print(f"💼 Social media post ready at: {file_data['file_path']}")
        
        return self.state.final_post


def run_create_new_post_flow(topic: str = "Latest AI and Tech Skills Trends"):
    """
    Run the Create New Post Flow with a specified topic
    
    Args:
        topic (str): The topic for social media post generation
    """
    print("🎬 Starting CrewAI Create New Post Generation Flow")
    print(f"📋 Topic: {topic}")
    print("=" * 60)
    
    # Create and run the flow
    flow = CreateNewPostFlow()
    
    # Set the topic in the state
    flow.state.topic = topic
    
    # Generate flow plot (optional)
    flow.plot("create_new_post_flow_plot")
    
    # Execute the flow
    result = flow.kickoff()
    
    return result


if __name__ == "__main__":
    # Run the flow
    run_create_new_post_flow()